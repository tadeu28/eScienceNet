/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.esciencenet.forms;

import com.esciencenet.models.DomainFileModel;
import com.esciencenet.models.OWLClassesModel;
import com.esciencenet.models.ServicesInfoModel;
import com.esciencenet.utils.JTreeOWLRenderer;
import com.esciencenet.semanticmanager.SemanticManager;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.mindswap.owl.OWLDataType;
import org.mindswap.owl.vocabulary.XSDDataTypes;


/**
 *
 * @author Tadeu
 */
public class FAssServicesAndDomain extends javax.swing.JDialog {
    
    private List<DomainFileModel> lstDomainFileModel;
    private List<DomainFileModel> lstDomainGained;
    private List<OWLClassesModel> lstOWLClassesModels;
    private ServicesInfoModel servicesInfoModel;
    
    private OWLClassesModel classesModel = null;
    
    /**
     * Creates new form FAssServicesAndDomain
     */
    public FAssServicesAndDomain(java.awt.Frame parent, boolean modal, String[] suggestions){
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);  
        this.setResizable(false);
        
        lstDomainFileModel = SemanticManager.getInstance().obterDomainFiles(
                             SemanticManager.getInstance().getInterestManager().getGrupoSelecionado().getGroupName());
        
        if (lstDomainFileModel.isEmpty()){
            JOptionPane.showMessageDialog(this, "Don't exist any domain registred in this Peer.", ".: e-ScienceNet :.", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        lblResearch.setText("Researching on "+  lstDomainFileModel.get(0).getDomainName() +" Domain...");
        
        String sugestoes = "";
        for(String sugest : suggestions){
            sugestoes = sugestoes + ";" + sugest;
        }   
        
        edtDomain.setText(sugestoes.replaceFirst(";", ""));
    }
    
    private void preecherComboDomain(JComboBox comboBox){
        
        //crio o modelo de items da combobox
        DefaultComboBoxModel cmdModel = new DefaultComboBoxModel();        
        
        //percorro a lista de grupos encontrados
        for (DomainFileModel domainFileModel : lstDomainFileModel){
            //seto o elemento no modelo
            cmdModel.addElement(domainFileModel.getDomainName());
        }       
        
        //seto o modelo e o indice do item na combobox
        comboBox.setModel(cmdModel);               
        comboBox.setSelectedIndex(0);             
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form
     * Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFooter = new javax.swing.JPanel();
        btnOK = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblResearch = new javax.swing.JLabel();
        pnlDomain = new javax.swing.JPanel();
        cmbDomainOntology = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        edtDomain = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        cbkSimgleDomain = new javax.swing.JCheckBox();
        pgcDomain = new javax.swing.JTabbedPane();
        tbsSuggest = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDomain = new javax.swing.JTable();
        tbsManualFind = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        treeOWL = new javax.swing.JTree();
        tbsSimpleTerms = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSimpleTerms = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Associantions between Services and Domains");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        pnlFooter.setBackground(new java.awt.Color(192, 192, 192));

        btnOK.setBackground(new java.awt.Color(192, 192, 192));
        btnOK.setText("Associate");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(192, 192, 192));
        btnCancelar.setText("Cancel");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblResearch.setForeground(new java.awt.Color(255, 255, 255));
        lblResearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hourglass-icon.png"))); // NOI18N
        lblResearch.setText("Researching on Domain...");

        javax.swing.GroupLayout pnlFooterLayout = new javax.swing.GroupLayout(pnlFooter);
        pnlFooter.setLayout(pnlFooterLayout);
        pnlFooterLayout.setHorizontalGroup(
            pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblResearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlFooterLayout.setVerticalGroup(
            pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(btnOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblResearch))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDomain.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cmbDomainOntology.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDomainOntologyActionPerformed(evt);
            }
        });

        jLabel1.setText("Domain Ontology");

        jLabel2.setText("Service domain term");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupa.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        cbkSimgleDomain.setText("Search only in this domain");
        cbkSimgleDomain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbkSimgleDomainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDomainLayout = new javax.swing.GroupLayout(pnlDomain);
        pnlDomain.setLayout(pnlDomainLayout);
        pnlDomainLayout.setHorizontalGroup(
            pnlDomainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDomainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDomainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDomainLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbDomainOntology, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbkSimgleDomain))
                    .addGroup(pnlDomainLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtDomain, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDomainLayout.setVerticalGroup(
            pnlDomainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDomainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDomainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbDomainOntology, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbkSimgleDomain))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDomainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDomainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(edtDomain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(382, 382, 382))
        );

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        tableDomain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "URI", "OWL Domain"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableDomain.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tableDomain.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tableDomain);
        tableDomain.getColumnModel().getColumn(0).setMinWidth(300);
        tableDomain.getColumnModel().getColumn(0).setPreferredWidth(300);
        tableDomain.getColumnModel().getColumn(1).setMinWidth(1500);
        tableDomain.getColumnModel().getColumn(1).setPreferredWidth(1500);
        tableDomain.getColumnModel().getColumn(2).setResizable(false);
        tableDomain.getColumnModel().getColumn(2).setPreferredWidth(0);

        javax.swing.GroupLayout tbsSuggestLayout = new javax.swing.GroupLayout(tbsSuggest);
        tbsSuggest.setLayout(tbsSuggestLayout);
        tbsSuggestLayout.setHorizontalGroup(
            tbsSuggestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
        );
        tbsSuggestLayout.setVerticalGroup(
            tbsSuggestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
        );

        pgcDomain.addTab("Suggested Term", tbsSuggest);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        treeOWL.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        treeOWL.setRootVisible(false);
        treeOWL.setShowsRootHandles(true);
        jScrollPane3.setViewportView(treeOWL);

        javax.swing.GroupLayout tbsManualFindLayout = new javax.swing.GroupLayout(tbsManualFind);
        tbsManualFind.setLayout(tbsManualFindLayout);
        tbsManualFindLayout.setHorizontalGroup(
            tbsManualFindLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
        );
        tbsManualFindLayout.setVerticalGroup(
            tbsManualFindLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
        );

        pgcDomain.addTab("Manual Selection", tbsManualFind);

        tblSimpleTerms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "URI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSimpleTerms.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(tblSimpleTerms);
        tblSimpleTerms.getColumnModel().getColumn(0).setResizable(false);
        tblSimpleTerms.getColumnModel().getColumn(0).setPreferredWidth(150);
        tblSimpleTerms.getColumnModel().getColumn(1).setResizable(false);
        tblSimpleTerms.getColumnModel().getColumn(1).setPreferredWidth(470);

        javax.swing.GroupLayout tbsSimpleTermsLayout = new javax.swing.GroupLayout(tbsSimpleTerms);
        tbsSimpleTerms.setLayout(tbsSimpleTermsLayout);
        tbsSimpleTermsLayout.setHorizontalGroup(
            tbsSimpleTermsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
        );
        tbsSimpleTermsLayout.setVerticalGroup(
            tbsSimpleTermsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
        );

        pgcDomain.addTab("Simple Terms", tbsSimpleTerms);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDomain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pgcDomain, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlDomain, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pgcDomain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleName("frmServicesDomains");

        setSize(new java.awt.Dimension(655, 511));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        
        String owlClassName = "";
        OWLClassesModel owlClassModel = null;
        
        if (pgcDomain.getSelectedIndex() == 1){
            if (!treeOWL.getSelectionModel().isSelectionEmpty()){
                owlClassName = treeOWL.getSelectionPath().getLastPathComponent().toString();
                owlClassModel = OWLClassesModel.verificarOWLClass(lstOWLClassesModels, owlClassName);
                
                if (owlClassModel.getName().contains("≡")){
                    StringTokenizer owlClasses = new StringTokenizer(owlClassModel.getName(), "≡");
                    StringTokenizer owlURIs = new StringTokenizer(owlClassModel.getUri(), "≡");

                    FSelectEquivalentClass frmEquivalentClass = new FSelectEquivalentClass(null, true, owlClasses, owlURIs, owlClassModel.getSuperClass());
                    frmEquivalentClass.setVisible(true);

                    if (frmEquivalentClass.getOwlClassesModel() == null){
                        return;
                    }else{
                        owlClassModel = frmEquivalentClass.getOwlClassesModel();
                    }
                }
                
                owlClassModel.setFile(cmbDomainOntology.getSelectedItem().toString());
            }
        }else if (pgcDomain.getSelectedIndex() == 2){
            
            if (tblSimpleTerms.getSelectedRow() >= 0){
                owlClassModel = new OWLClassesModel();
                owlClassModel.setName(tblSimpleTerms.getModel().getValueAt(tblSimpleTerms.getSelectedRow(), 0).toString());
                owlClassModel.setUri(tblSimpleTerms.getModel().getValueAt(tblSimpleTerms.getSelectedRow(), 1).toString());                
            }
            
        }else{            
            if (tableDomain.getSelectedRow() >= 0){
                owlClassModel = new OWLClassesModel();
                owlClassModel.setName(tableDomain.getModel().getValueAt(tableDomain.getSelectedRow(), 0).toString());
                owlClassModel.setUri(tableDomain.getModel().getValueAt(tableDomain.getSelectedRow(), 1).toString());
                owlClassModel.setFile(tableDomain.getModel().getValueAt(tableDomain.getSelectedRow(), 2).toString());
            }
        }
        
        if(owlClassModel != null){
            this.classesModel = owlClassModel;
        }
        
        this.setVisible(false);
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed
    
    private DomainFileModel getOWLDomainByName(String domainName){
        
        for (DomainFileModel domainFileModel : lstDomainFileModel){
            
            if (domainFileModel.getDomainName().equals(domainName)){
                return domainFileModel;
            }
        }
        
        return null;
    }
    
    public void limparTabela(){
        
        DefaultTableModel defaultTableModel = (DefaultTableModel) tableDomain.getModel();
                
        while (defaultTableModel.getRowCount() != 0){         
            defaultTableModel.removeRow(0);            
        }        
    }
    
    public void limparTabelaSimpleTerms(){
        
        DefaultTableModel defaultTableModel = (DefaultTableModel) tblSimpleTerms.getModel();
                
        while (defaultTableModel.getRowCount() != 0){         
            defaultTableModel.removeRow(0);            
        }        
    }
    
    private void percorrerOWLClasses(List<OWLClassesModel> lstOWLClassesModels, DefaultMutableTreeNode parentNode){
        
        for(OWLClassesModel owlClassesModel : lstOWLClassesModels){
                        
            DefaultMutableTreeNode arquivo = new DefaultMutableTreeNode(owlClassesModel.getName());   
            parentNode.add(arquivo);            
            
            percorrerOWLClasses(owlClassesModel.getSubClasses(), arquivo);
        }        
    }
    
    
    private void cmbDomainOntologyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDomainOntologyActionPerformed
        
        lstOWLClassesModels = SemanticManager.getInstance().searchInFullInferredDomain(getOWLDomainByName(cmbDomainOntology.getSelectedItem().toString()));
        this.manualOntologyProcess();
        
    }//GEN-LAST:event_cmbDomainOntologyActionPerformed

    private void manualOntologyProcess(){
        treeOWL.setModel(null);
           
        DefaultMutableTreeNode rootModel = new DefaultMutableTreeNode("Nenhum");
        DefaultTreeModel treeModel = new DefaultTreeModel(rootModel);

        this.percorrerOWLClasses(lstOWLClassesModels, rootModel);

        treeModel.setRoot(rootModel);            
        treeOWL.setModel(treeModel);
        
        for (int i = 0; i < treeOWL.getRowCount(); i++) {
            treeOWL.expandRow(i);
        } 
        
        treeOWL.setCellRenderer(new JTreeOWLRenderer());
    }
    
    private void processResults(){
        lblResearch.setVisible(false);        
        this.limparTabela();
        
        if (lstDomainGained.isEmpty() ){
            JOptionPane.showMessageDialog(this, "The service is not related with any domain.", ".: e-ScienceNet :.", JOptionPane.ERROR_MESSAGE);
            //pgcDomain.addTab("Manual Selection", tbsManualFind);
            edtDomain.setEnabled(true);
            
            lstOWLClassesModels = SemanticManager.getInstance().searchInFullInferredDomain(getOWLDomainByName(cmbDomainOntology.getSelectedItem().toString()));
            
            this.manualOntologyProcess();
        }else{
            DefaultTableModel tableModel = (DefaultTableModel) tableDomain.getModel();
            
            for (DomainFileModel domainFileModel : lstDomainGained){
             
                Object[] linha = {domainFileModel.getDomainName(),
                                  domainFileModel.getDomainURI(),
                                  domainFileModel.getDomainOWLFile().replace(".owl", "")};
                
                tableModel.addRow(linha);                      
            }            
            
            tableDomain.setModel(tableModel);
        }
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.preecherComboDomain(cmbDomainOntology);
    }//GEN-LAST:event_formWindowOpened

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
        if(cbkSimgleDomain.isSelected()){
            lblResearch.setText("Researching on "+ cmbDomainOntology.getSelectedItem().toString() +" Domain...");              
            lstDomainGained = SemanticManager.getInstance().searchServiceDomain(getOWLDomainByName(cmbDomainOntology.getSelectedItem().toString()), edtDomain.getText());

            pgcDomain.setSelectedIndex(0);
        }else{
            this.processSuggestionInAllDomains();
            pgcDomain.setSelectedIndex(0);
        }
        
        this.processResults();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void processSuggestionInAllDomains(){
        
        lstDomainGained = new ArrayList<>();
        
        for(DomainFileModel domainFileModel : lstDomainFileModel){

            lblResearch.setText("Researching on "+ domainFileModel.getDomainName() +" Domain...");
            
            List<DomainFileModel> lstDomainModelTemp = SemanticManager.getInstance().searchServiceDomain(domainFileModel, edtDomain.getText());

            for(DomainFileModel model : lstDomainModelTemp){
                lstDomainGained.add(model);
            }

            lstDomainModelTemp.clear();
        }
    }
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        this.processSuggestionInAllDomains();
        this.processResults();      
        this.showSimpleTerms();
    }//GEN-LAST:event_formComponentShown

    private void cbkSimgleDomainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbkSimgleDomainActionPerformed
        
    }//GEN-LAST:event_cbkSimgleDomainActionPerformed

    private void showSimpleTerms(){
        
        this.limparTabelaSimpleTerms();
        
        DefaultTableModel model = (DefaultTableModel) tblSimpleTerms.getModel();
        
        for(OWLDataType dataType : XSDDataTypes.getDataTypes()){
            
            Object[] linha = {dataType.toString().substring(dataType.toString().lastIndexOf("#") + 1), dataType.getURI()};
            
            model.addRow(linha);
        }
        
        tblSimpleTerms.setModel(model);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnOK;
    private javax.swing.JCheckBox cbkSimgleDomain;
    private javax.swing.JComboBox cmbDomainOntology;
    private javax.swing.JTextField edtDomain;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblResearch;
    private javax.swing.JTabbedPane pgcDomain;
    private javax.swing.JPanel pnlDomain;
    private javax.swing.JPanel pnlFooter;
    private javax.swing.JTable tableDomain;
    private javax.swing.JTable tblSimpleTerms;
    private javax.swing.JPanel tbsManualFind;
    private javax.swing.JPanel tbsSimpleTerms;
    private javax.swing.JPanel tbsSuggest;
    private javax.swing.JTree treeOWL;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the servicesInfoModel
     */
    public ServicesInfoModel getServicesInfoModel() {
        return servicesInfoModel;
    }

    /**
     * @return the classesModel
     */
    public OWLClassesModel getClassesModel() {
        return classesModel;
    }
}
