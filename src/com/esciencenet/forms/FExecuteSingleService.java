/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.esciencenet.forms;

import com.esciencenet.compositionmanager.SingleExecute;
import com.esciencenet.semanticmanager.SemanticManager;
import com.esciencenet.servicemanager.OWLSOperation;
import com.esciencenet.servicemanager.OWLSParam;
import com.esciencenet.utils.EScienceNetUtils;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Tadeu Classe
 */
public class FExecuteSingleService extends JDialog {

    private Timer tempo = null;    
    private long tempoInicio;
    private SingleExecute singleExecute;
    private OWLSOperation passedOperation;
    
    /**
     * Creates new form FExecuteSingleService
     * @param parent
     * @param modal
     */
    public FExecuteSingleService(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.passedOperation = null;
    }
    
    public FExecuteSingleService(java.awt.Frame parent, boolean modal, OWLSOperation passedOperation) {
        super(parent, modal);
        initComponents();
        this.passedOperation = passedOperation;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFooter1 = new javax.swing.JPanel();
        btnFechar1 = new javax.swing.JButton();
        lblTask = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblOperations = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblServices = new javax.swing.JTable();
        mnuControl = new javax.swing.JToolBar();
        btnPlay = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnStop = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        lblTime = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblParameters = new javax.swing.JTable();
        btnAddParam = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        pgcIndo = new javax.swing.JTabbedPane();
        tblTask = new javax.swing.JPanel();
        scrollTaskInfo = new javax.swing.JScrollPane();
        edtTaskInfo = new javax.swing.JTextArea();
        tblParam = new javax.swing.JPanel();
        scrollParamInfo = new javax.swing.JScrollPane();
        edtParamInfo = new javax.swing.JTextArea();
        tblServiceInfo = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        edtInfo = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Single Service Execution");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        pnlFooter1.setBackground(new java.awt.Color(192, 192, 192));

        btnFechar1.setBackground(new java.awt.Color(192, 192, 192));
        btnFechar1.setText("Close");
        btnFechar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFechar1ActionPerformed(evt);
            }
        });

        lblTask.setForeground(new java.awt.Color(255, 255, 255));
        lblTask.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblTaskPropertyChange(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(192, 192, 192));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save-as-icon.png"))); // NOI18N
        jButton1.setText("Save Results");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblOperations.setForeground(new java.awt.Color(255, 255, 255));
        lblOperations.setText("Wainting a moments: Loading Services and Connectors...");

        javax.swing.GroupLayout pnlFooter1Layout = new javax.swing.GroupLayout(pnlFooter1);
        pnlFooter1.setLayout(pnlFooter1Layout);
        pnlFooter1Layout.setHorizontalGroup(
            pnlFooter1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFooter1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblOperations)
                .addGap(244, 244, 244)
                .addComponent(lblTask, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFechar1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlFooter1Layout.setVerticalGroup(
            pnlFooter1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFooter1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlFooter1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFechar1)
                    .addComponent(lblTask)
                    .addComponent(jButton1)
                    .addComponent(lblOperations))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(" Services / Connectors "));

        tblServices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblServices.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblServices.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblServices.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblServicesMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblServices);
        if (tblServices.getColumnModel().getColumnCount() > 0) {
            tblServices.getColumnModel().getColumn(0).setResizable(false);
            tblServices.getColumnModel().getColumn(0).setPreferredWidth(25);
            tblServices.getColumnModel().getColumn(1).setPreferredWidth(240);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        mnuControl.setFloatable(false);
        mnuControl.setRollover(true);

        btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/control-play-blue-icon32.png"))); // NOI18N
        btnPlay.setText("Start");
        btnPlay.setFocusable(false);
        btnPlay.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnPlay.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });
        mnuControl.add(btnPlay);
        mnuControl.add(jSeparator2);

        btnStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/control-stop-blue-icon32.png"))); // NOI18N
        btnStop.setText("Stop");
        btnStop.setEnabled(false);
        btnStop.setFocusable(false);
        btnStop.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnStop.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });
        mnuControl.add(btnStop);
        mnuControl.add(jSeparator1);

        lblTime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/time-icon.png"))); // NOI18N
        lblTime.setText("Time Elapsed [00:00:00]");
        lblTime.setEnabled(false);
        mnuControl.add(lblTime);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(" Input Parameters "));

        tblParameters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Name", "Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblParameters.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblParameters.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblParameters.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblParametersMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tblParameters);
        if (tblParameters.getColumnModel().getColumnCount() > 0) {
            tblParameters.getColumnModel().getColumn(0).setResizable(false);
            tblParameters.getColumnModel().getColumn(0).setPreferredWidth(25);
            tblParameters.getColumnModel().getColumn(1).setPreferredWidth(240);
            tblParameters.getColumnModel().getColumn(2).setPreferredWidth(300);
        }

        btnAddParam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-icon.png"))); // NOI18N
        btnAddParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddParamActionPerformed(evt);
            }
        });

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/limpar.png"))); // NOI18N
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddParam, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnAddParam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        pgcIndo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        edtTaskInfo.setEditable(false);
        edtTaskInfo.setColumns(20);
        edtTaskInfo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        edtTaskInfo.setRows(5);
        edtTaskInfo.setWrapStyleWord(true);
        edtTaskInfo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                edtTaskInfoPropertyChange(evt);
            }
        });
        scrollTaskInfo.setViewportView(edtTaskInfo);

        javax.swing.GroupLayout tblTaskLayout = new javax.swing.GroupLayout(tblTask);
        tblTask.setLayout(tblTaskLayout);
        tblTaskLayout.setHorizontalGroup(
            tblTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollTaskInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE)
        );
        tblTaskLayout.setVerticalGroup(
            tblTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollTaskInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
        );

        pgcIndo.addTab("Workflow Information", new javax.swing.ImageIcon(getClass().getResource("/images/Services.png")), tblTask); // NOI18N

        edtParamInfo.setEditable(false);
        edtParamInfo.setColumns(20);
        edtParamInfo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        edtParamInfo.setRows(5);
        edtParamInfo.setWrapStyleWord(true);
        scrollParamInfo.setViewportView(edtParamInfo);

        javax.swing.GroupLayout tblParamLayout = new javax.swing.GroupLayout(tblParam);
        tblParam.setLayout(tblParamLayout);
        tblParamLayout.setHorizontalGroup(
            tblParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollParamInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE)
        );
        tblParamLayout.setVerticalGroup(
            tblParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollParamInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
        );

        pgcIndo.addTab("Parameter Information", new javax.swing.ImageIcon(getClass().getResource("/images/recycle-bag-icon.png")), tblParam); // NOI18N

        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        edtInfo.setEditable(false);
        edtInfo.setContentType("text/html"); // NOI18N
        edtInfo.setText("");
        edtInfo.setToolTipText("");
        jScrollPane4.setViewportView(edtInfo);

        javax.swing.GroupLayout tblServiceInfoLayout = new javax.swing.GroupLayout(tblServiceInfo);
        tblServiceInfo.setLayout(tblServiceInfoLayout);
        tblServiceInfoLayout.setHorizontalGroup(
            tblServiceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        tblServiceInfoLayout.setVerticalGroup(
            tblServiceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblServiceInfoLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pgcIndo.addTab("Service Information", new javax.swing.ImageIcon(getClass().getResource("/images/sobre.png")), tblServiceInfo); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFooter1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mnuControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(pgcIndo)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(mnuControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(pgcIndo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlFooter1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(870, 737));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFechar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFechar1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnFechar1ActionPerformed

    private void lblTaskPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblTaskPropertyChange

    }//GEN-LAST:event_lblTaskPropertyChange

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
      
        btnFechar1.setEnabled(false);
        btnPlay.setEnabled(false);
        btnStop.setEnabled(true);
        lblTime.setEnabled(true);

        this.startExecution();
        this.edtTaskInfo.setText("");
    }//GEN-LAST:event_btnPlayActionPerformed

    public void stateComplete(){        
        btnStop.setEnabled(true);
        btnFechar1.setEnabled(true);
        OWLSOperation oWLSOperation = (OWLSOperation) tblServices.getModel().getValueAt(tblServices.getSelectedRow(), 1);
        if(oWLSOperation != null){
            DefaultTableModel model = (DefaultTableModel) tblParameters.getModel();

            for(OWLSParam param : oWLSOperation.getOutputs()){
                
                ImageIcon content = new ImageIcon(getClass().getResource("/images/arrow-up-icon.png"));
                Object[] linha = {content, param, param.getValueReturned()};
                
                model.addRow(linha);
            }            
            
            tblParameters.setModel(model);
        }
        
        pgcIndo.setSelectedIndex(0);
    }
    
    private void limparTabela(JTable tabela){
        
        DefaultTableModel defaultTableModel = (DefaultTableModel) tabela.getModel();
                
        while (defaultTableModel.getRowCount() != 0){         
            defaultTableModel.removeRow(0);            
        }        
    }
    
    
    private void startExecution(){
        try{
            if(tblServices.getSelectedRow() != -1){
                pgcIndo.setSelectedIndex(0);
                edtTaskInfo.append("[" + EScienceNetUtils.getCurrentDateTime("MM/dd/yyyy 'at' hh:mm:ss aa") + "]: The service ["+ 
                                         tblServices.getModel().getValueAt(tblServices.getSelectedRow(), 1).toString() +"] has been started.\n");

                tempoInicio = System.currentTimeMillis();

                this.singleExecute = null;
                this.singleExecute = new SingleExecute(this);
                this.singleExecute.setSelectedOperation((OWLSOperation) tblServices.getModel().getValueAt(tblServices.getSelectedRow(), 1));
                singleExecute.start();

                //this.btnStopActionPerformed(null);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "It wasn't possible to excetute this workflow.\n\n" + e.getMessage(), ".: e-ScienceNet :.", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        this.singleExecute.requestStop();
        
        btnFechar1.setEnabled(true);
        btnPlay.setEnabled(true);
        btnStop.setEnabled(false);
        lblTime.setEnabled(false);
        edtTaskInfo.setText("");

        this.setStartStates();
    }//GEN-LAST:event_btnStopActionPerformed

    private void setStartStates(){
        OWLSOperation operation = (OWLSOperation) tblServices.getModel().getValueAt(tblServices.getSelectedRow(), 1);
        if(operation != null){
            this.preencherParametros(operation.getInputs());
            
            for(OWLSParam outParam : operation.getOutputs()){
                if(!outParam.getValueReturned().equals("")){
                    outParam.setValueReturned("");
                }
            }            
        }
        
        lblTime.setText("Time Elapsed ["+ EScienceNetUtils.formatMilisecond("hh:mm:ss.SSS", 0) +"]");
    } 
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String file = JOptionPane.showInputDialog(null, "Enter with file name (No extension)", ".: e-ScienceNet :.", JOptionPane.WARNING_MESSAGE);

        if(!file.equals("")){

            file = file + ".wfr";

            String arquivoAGravar = EScienceNetUtils.encodeBase64(edtTaskInfo.getText() + this.generateAllInformation());
            
            if(SemanticManager.getInstance().getDataManager().gravarLogWorkflow(arquivoAGravar, file)){

                SemanticManager.getInstance().getDataManager().processarDownloadRequest(file);

                JOptionPane.showMessageDialog(null, "The workflow's log was save as e-ScienceNet's resource.", ".: e-ScienceNet :.", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        List<OWLSOperation> lstOperation = null;
        if(this.passedOperation == null){
            lstOperation = SemanticManager.getInstance().getServiceManager().getAllServices();            
        }else{
            lstOperation = new ArrayList<>();
            lstOperation.add(passedOperation);
        }
        
        if(lstOperation != null){
            if(!lstOperation.isEmpty()){
                this.preencherServicos(lstOperation);
            }
        }
        
        lblOperations.setVisible(false);
    }//GEN-LAST:event_formComponentShown

    private void edtTaskInfoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_edtTaskInfoPropertyChange

    }//GEN-LAST:event_edtTaskInfoPropertyChange

    private void tblServicesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblServicesMouseReleased
        if(tblServices.getSelectedRow() != -1){
            pgcIndo.setSelectedIndex(2);

            OWLSOperation oWLSOperation = (OWLSOperation) tblServices.getModel().getValueAt(tblServices.getSelectedRow(), 1);
            if(oWLSOperation != null){
                edtInfo.setText(SemanticManager.getInstance().getSearchManager().obterInformacoes(oWLSOperation));
                this.preencherParametros(oWLSOperation.getInputs());
            }
        }
    }//GEN-LAST:event_tblServicesMouseReleased

    private void tblParametersMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblParametersMouseReleased
        if(tblParameters.getSelectedRow() != -1){

            pgcIndo.setSelectedIndex(1);
            OWLSParam param = (OWLSParam) tblParameters.getModel().getValueAt(tblParameters.getSelectedRow(), 1);
            boolean isInput = (tblParameters.getModel().getValueAt(tblParameters.getSelectedRow(), 0).toString().contains("down"));
            
            if(param != null){
                
                String valueConnected = "";
                if(isInput){
                    for(OWLSParam paramConn : param.getParamConnected()){
                        if(!paramConn.getValueReturned().equals("")){
                            valueConnected = valueConnected + "|" + paramConn.getValueReturned();
                        }
                    }
                    
                    if(valueConnected.indexOf("|") != -1){
                        valueConnected = valueConnected.substring(1, valueConnected.length());
                    }
                }
                
                String info = (isInput ? "Input" : "Output") + " parameter:\n\n";                
                info = info + "- Parameter Name: " + param.getParentName() + "\n";
                info = info + "- Parameter Semantic Type: " + param.getParamDomainTerm()+ "\n";
                info = info + "- Parameter Syntatic Type: " + param.getParamType() + "\n";
                info = info + "- Content:\n" + singleExecute.capsulink.format(singleExecute.capsulink,
                                              (param.getValueReturned().equals("") ? 
                                              (param.getManualContent().equals("") ? 
                                              (valueConnected.equals("") ? "Nothing" :valueConnected) 
                                                                                     : param.getManualContent()) 
                                                                                     : param.getValueReturned())+ "\n");
                
                edtParamInfo.setText(info);
            }            
        }
    }//GEN-LAST:event_tblParametersMouseReleased

    private void btnAddParamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddParamActionPerformed
        if(tblParameters.getSelectedRow() != -1){

            DefaultTableModel model = (DefaultTableModel) tblParameters.getModel();
            
            OWLSParam owlsParam = (OWLSParam) model.getValueAt(tblParameters.getSelectedRow(), 1);
            OWLSOperation oWLSOperation = (OWLSOperation) tblServices.getModel().getValueAt(tblServices.getSelectedRow(), 1);

            if(owlsParam != null){

                FPutParameters frmPutParameters = new FPutParameters(null, true, oWLSOperation.getOperationName(), owlsParam, true);
                frmPutParameters.setVisible(true);

                if(!owlsParam.getManualContent().equals("")){
                    model.setValueAt(owlsParam.getManualContent().equals("") ? "" : "[Manual Value] - " + owlsParam.getManualContent(), tblParameters.getSelectedRow(), 2);                
                }else{
                    if(owlsParam.getParamConnected().size() > 0){
                        String paramsConnected = "|";
                        for(OWLSParam paramConnected : owlsParam.getParamConnected()){
                            paramsConnected = paramsConnected + paramConnected.getParamName() + "|";
                        }

                        if(paramsConnected.contains("|")){
                            paramsConnected = paramsConnected.substring(1, paramsConnected.length());
                        }

                        model.setValueAt(paramsConnected, tblParameters.getSelectedRow(), 2);
                    }else{
                        model.setValueAt("", tblParameters.getSelectedRow(), 2);
                    }
                }
            }
        }
    }//GEN-LAST:event_btnAddParamActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        if(tblParameters.getSelectedRow() != -1){

            DefaultTableModel model = (DefaultTableModel) tblParameters.getModel();
            model.setValueAt(null, tblParameters.getSelectedRow(), 2);

            OWLSParam oWLSParam = (OWLSParam) tblParameters.getModel().getValueAt(tblParameters.getSelectedRow(), 1);
            
            if(oWLSParam != null){
                if(oWLSParam.getParamConnected().size() > 0){
                    oWLSParam.getParamConnected().clear();
                }
                oWLSParam.setManualContent("");
            }
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
                
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        OWLSOperation operation = (OWLSOperation) tblServices.getModel().getValueAt(tblServices.getSelectedRow(), 1);
        if(operation != null){
            
            for(OWLSParam outParam : operation.getOutputs()){
                if(!outParam.getValueReturned().equals("")){
                    outParam.setValueReturned("");
                }
            }            
        }
    }//GEN-LAST:event_formWindowClosed

    public void preencherParametros(List<OWLSParam> parametros){
        this.limparTabela(tblParameters);
        
        DefaultTableModel model = (DefaultTableModel) tblParameters.getModel();
        
        TableColumnModel ColumnModel = tblParameters.getColumnModel();    
        FExecuteSingleService.JTableRenderer renderer = new FExecuteSingleService.JTableRenderer();    
        ColumnModel.getColumn(0).setCellRenderer(renderer);
        
        for(OWLSParam param : parametros){
        
            ImageIcon content = new ImageIcon(getClass().getResource("/images/arrow-down-icon.png"));
            
            Object[] linha = {content, 
                              param, 
                              param.getManualContent()};
            
            model.addRow(linha);
        }
        
        tblParameters.setModel(model);
        tblParameters.setRowHeight(24);
    }
    
    private void preencherServicos(List<OWLSOperation> lstOperation){
        DefaultTableModel model = (DefaultTableModel) tblServices.getModel();
        
        TableColumnModel ColumnModel = tblServices.getColumnModel();    
        FExecuteSingleService.JTableRenderer renderer = new FExecuteSingleService.JTableRenderer();    
        ColumnModel.getColumn(0).setCellRenderer(renderer);
        
        for(OWLSOperation operation : lstOperation){
        
            ImageIcon content = (operation.getOperationDomainTerm().equals("") ? (new ImageIcon(getClass().getResource("/images/port-icon16.png"))) : 
                                                                                 (new ImageIcon(getClass().getResource("/images/world-icon16.png"))));
            
            Object[] linha = {content, 
                              operation};
            
            model.addRow(linha);
        }
        
        tblServices.setModel(model);
        
       if(tblServices.getRowCount() > 0){
           tblServices.setRowSelectionInterval(0, 0);
           this.tblServicesMouseReleased(null);
       }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddParam;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnFechar1;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnStop;
    private javax.swing.JTextPane edtInfo;
    private javax.swing.JTextArea edtParamInfo;
    private javax.swing.JTextArea edtTaskInfo;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JLabel lblOperations;
    private javax.swing.JLabel lblTask;
    public javax.swing.JLabel lblTime;
    private javax.swing.JToolBar mnuControl;
    private javax.swing.JTabbedPane pgcIndo;
    private javax.swing.JPanel pnlFooter;
    private javax.swing.JPanel pnlFooter1;
    private javax.swing.JScrollPane scrollParamInfo;
    private javax.swing.JScrollPane scrollTaskInfo;
    private javax.swing.JPanel tblParam;
    private javax.swing.JTable tblParameters;
    private javax.swing.JPanel tblServiceInfo;
    private javax.swing.JTable tblServices;
    private javax.swing.JPanel tblTask;
    // End of variables declaration//GEN-END:variables

    private String generateAllInformation(){
        String info = "";
        
        OWLSOperation operation = (OWLSOperation) tblServices.getModel().getValueAt(tblServices.getSelectedRow(), 1);
        
        if(operation != null){
            info = info + "***************************************************************************************************************\n";            
            info = info + "OPERATION NAME: " + operation.getOperationName() + "\n";
            info = info + "OPERATION DOMAIN TERM: " + operation.getOperationDomainTerm() + "\n";
            info = info + "OPERATION SERVICE URL: " + operation.getServiceURL() + "\n";
            info = info + "_______________________________________________________________________________________________________________\n";
            
            info = info + "INPUT PARAMETERS:\n\n";
            for(OWLSParam param : operation.getInputs()){
                info = info + "Parameter Name: " + param.getParamName() + "\n";
                if(param.getValueReturned().equals("") && param.getManualContent().equals("")){
                    
                    for(OWLSParam paramAss : param.getParamConnected()){
                        info = info + "Parameter Valeu: " + (paramAss.getValueReturned().equals("") ? paramAss.getManualContent() : 
                                                                                                      paramAss.getValueReturned()) + "\n\n";
                    }
                    
                }else{
                    info = info + "Parameter Valeu: " + (param.getValueReturned().equals("") ? param.getManualContent() : 
                                                                                               param.getValueReturned()) + "\n\n";
                }
            }
            
            info = info + "OUTPUT PARAMETERS:\n\n";
            for(OWLSParam param : operation.getOutputs()){
                info = info + "Parameter Name: " + param.getParamName() + "\n";
                info = info + "Parameter Valeu: " + (param.getValueReturned().equals("") ? param.getManualContent() : 
                                                                                           param.getValueReturned()) + "\n\n";
            }
        }
        
        if(!info.equals("")){
            info = info + "***************************************************************************************************************\n\n";
            info = "\n\nDETAILED RESULT:\n"+
                   "EXECUTION DATE: " + EScienceNetUtils.getCurrentDateTime("mm/dd/yyyy") + "\n\n" + info;                        
        }
        
        return info;
    }
    
    /**
     * @return the tempo
     */
    public Timer getTempo() {
        return tempo;
    }

    /**
     * @return the tempoInicio
     */
    public long getTempoInicio() {
        return tempoInicio;
    }

    public void exibirInfo(String info){        
        edtTaskInfo.append("[" + EScienceNetUtils.getCurrentDateTime("MM/dd/yyyy 'at' hh:mm:ss aa") + "]: " + info + "\n");
        scrollTaskInfo.getVerticalScrollBar().setValue(scrollTaskInfo.getVerticalScrollBar().getMaximum());
    }
    
    public class JTableRenderer extends DefaultTableCellRenderer  {    
    
        @Override
        protected void setValue(Object value){    

            if (value instanceof ImageIcon){    

                if (value != null){    
                    ImageIcon d = (ImageIcon) value;    
                    setIcon(d);
                } else{    
                    setText("");    
                    setIcon(null);  
                    this.setFont(this.getFont().deriveFont(16));
                }    

            } else {    
                super.setValue(value);    
            }    

            this.setHorizontalAlignment(CENTER);            
        }
    }
}
