/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.esciencenet.forms;

import com.esciencenet.models.ServicesInfoModel;
import com.esciencenet.semanticmanager.SemanticManager;
import com.esciencenet.servicemanager.FilesServicesFilter;
import com.esciencenet.servicemanager.ServiceManager;
import com.esciencenet.servicemanager.wsdlmodels.WSDLRecover;
import com.esciencenet.servicemanager.wsdlmodels.WSDLRecoverParams;
import com.esciencenet.servicemanager.wsdlmodels.WSDLRecoverPort;
import com.esciencenet.servicemanager.wsdlmodels.WSDLRecoverService;
import java.io.File;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.xml.namespace.QName;
import org.mindswap.owl.vocabulary.OWL;
import org.mindswap.owl.vocabulary.XSD;
import org.mindswap.utils.QNameProvider;
import org.mindswap.utils.URIUtils;
import org.mindswap.wsdl.WSDLConsts;
import org.mindswap.wsdl.WSDLOperation;
import org.mindswap.wsdl.WSDLParameter;
import org.mindswap.wsdl.WSDLService;

/**
 *
 * @author Tadeu
 */
public class FAddServices extends javax.swing.JDialog {

    private static final String LOGICAL_URI = "http://www.esciencenet.com.br/tadeuclasse/esciencenet/";    
    
    private QNameProvider qNames = new QNameProvider();
    private ServiceManager serviceManager;
    private ServicesInfoModel serviceInfoModel;
    private boolean connector;
    private List<WSDLRecoverParams> lstInputs;
    private List<WSDLRecoverParams> lstOutputs;
    
    /**
     * Creates new form FAddServices
     */
    public FAddServices(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.updateNS();
        lblAviso.setVisible(false);
        lstInputs = new ArrayList<>();
        lstOutputs = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form
     * Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChoser = new javax.swing.JFileChooser();
        pnlHeader = new javax.swing.JPanel();
        lblURL = new javax.swing.JLabel();
        edtWSDL = new javax.swing.JTextField();
        btnFolder = new javax.swing.JButton();
        btnProcessService = new javax.swing.JButton();
        pnlFooter = new javax.swing.JPanel();
        btnOK = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        pnlBody = new javax.swing.JPanel();
        pnlOperations = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstOperations = new javax.swing.JList();
        pnlServiceInfo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edtServiceName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        edtLogicalURI = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        edtServiceDescription = new javax.swing.JTextArea();
        btnRelations = new javax.swing.JButton();
        lblDomainTerm = new javax.swing.JLabel();
        ckbSuggestions = new javax.swing.JCheckBox();
        lblAviso = new javax.swing.JLabel();
        pnlInputs = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblInput = new javax.swing.JTable();
        btnAnotateInput = new javax.swing.JButton();
        btnShowSubParams = new javax.swing.JButton();
        pnlOutput = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblOutput = new javax.swing.JTable();
        btnAnotateOutput = new javax.swing.JButton();
        btnShowSubParamsOut = new javax.swing.JButton();
        pnlOutput1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblNS = new javax.swing.JTable();
        btnDelNS = new javax.swing.JButton();
        btnAddNS = new javax.swing.JButton();

        fileChoser.setAcceptAllFileFilterUsed(false);
        fileChoser.setRequestFocusEnabled(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Service Manager - OWL-s Creator");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(null);

        lblURL.setText("Enter URL/File");

        btnFolder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/directory-accept-icon.png"))); // NOI18N
        btnFolder.setText("Local File");
        btnFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFolderActionPerformed(evt);
            }
        });

        btnProcessService.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/processService.png"))); // NOI18N
        btnProcessService.setText("Process");
        btnProcessService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessServiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblURL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtWSDL, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnProcessService, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblURL)
                    .addComponent(edtWSDL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFolder)
                    .addComponent(btnProcessService)))
        );

        getContentPane().add(pnlHeader);
        pnlHeader.setBounds(0, 0, 1000, 38);

        pnlFooter.setBackground(new java.awt.Color(192, 192, 192));

        btnOK.setBackground(new java.awt.Color(192, 192, 192));
        btnOK.setText("Generate OWL-S");
        btnOK.setEnabled(false);
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(192, 192, 192));
        btnCancelar.setText("Cancel");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFooterLayout = new javax.swing.GroupLayout(pnlFooter);
        pnlFooter.setLayout(pnlFooterLayout);
        pnlFooterLayout.setHorizontalGroup(
            pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFooterLayout.createSequentialGroup()
                .addContainerGap(758, Short.MAX_VALUE)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOK)
                .addContainerGap())
        );
        pnlFooterLayout.setVerticalGroup(
            pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(btnOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnlFooter);
        pnlFooter.setBounds(0, 630, 1000, 51);

        pnlOperations.setBorder(javax.swing.BorderFactory.createTitledBorder(" Operations "));

        lstOperations.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstOperations.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstOperationsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstOperations);

        javax.swing.GroupLayout pnlOperationsLayout = new javax.swing.GroupLayout(pnlOperations);
        pnlOperations.setLayout(pnlOperationsLayout);
        pnlOperationsLayout.setHorizontalGroup(
            pnlOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
        );
        pnlOperationsLayout.setVerticalGroup(
            pnlOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        pnlServiceInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(" Service Information "));
        pnlServiceInfo.setLayout(null);

        jLabel1.setText("Service Name");
        pnlServiceInfo.add(jLabel1);
        jLabel1.setBounds(10, 20, 79, 16);

        edtServiceName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtServiceNameActionPerformed(evt);
            }
        });
        edtServiceName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                edtServiceNameKeyReleased(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtServiceNameKeyPressed(evt);
            }
        });
        pnlServiceInfo.add(edtServiceName);
        edtServiceName.setBounds(10, 40, 720, 22);

        jLabel2.setText("Logical URI");
        pnlServiceInfo.add(jLabel2);
        jLabel2.setBounds(10, 90, 63, 16);
        pnlServiceInfo.add(edtLogicalURI);
        edtLogicalURI.setBounds(10, 110, 720, 22);

        jLabel3.setText("Service Description");
        pnlServiceInfo.add(jLabel3);
        jLabel3.setBounds(10, 140, 109, 16);

        edtServiceDescription.setColumns(20);
        edtServiceDescription.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        edtServiceDescription.setLineWrap(true);
        edtServiceDescription.setRows(5);
        jScrollPane1.setViewportView(edtServiceDescription);

        pnlServiceInfo.add(jScrollPane1);
        jScrollPane1.setBounds(10, 160, 720, 60);

        btnRelations.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/domain-template-icon.png"))); // NOI18N
        btnRelations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelationsActionPerformed(evt);
            }
        });
        pnlServiceInfo.add(btnRelations);
        btnRelations.setBounds(10, 70, 20, 20);

        lblDomainTerm.setText("No domain term associate...");
        lblDomainTerm.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                lblDomainTermComponentShown(evt);
            }
        });
        pnlServiceInfo.add(lblDomainTerm);
        lblDomainTerm.setBounds(40, 70, 690, 16);

        ckbSuggestions.setText("Show services related");
        ckbSuggestions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbSuggestionsActionPerformed(evt);
            }
        });
        pnlServiceInfo.add(ckbSuggestions);
        ckbSuggestions.setBounds(580, 10, 155, 25);

        lblAviso.setForeground(new java.awt.Color(255, 0, 0));
        lblAviso.setText("You must change the service name");
        pnlServiceInfo.add(lblAviso);
        lblAviso.setBounds(100, 20, 210, 16);

        pnlInputs.setBorder(javax.swing.BorderFactory.createTitledBorder(" Inputs "));
        pnlInputs.setLayout(null);

        tblInput.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "WSDL Parameter", "WSDL Type", "OWL-S Name", "OWL Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblInputMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tblInput);
        tblInput.getColumnModel().getColumn(3).setMinWidth(280);
        tblInput.getColumnModel().getColumn(3).setPreferredWidth(280);
        tblInput.getColumnModel().getColumn(3).setMaxWidth(280);

        pnlInputs.add(jScrollPane3);
        jScrollPane3.setBounds(10, 20, 680, 80);

        btnAnotateInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/domain-template-icon.png"))); // NOI18N
        btnAnotateInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnotateInputActionPerformed(evt);
            }
        });
        pnlInputs.add(btnAnotateInput);
        btnAnotateInput.setBounds(700, 20, 30, 25);

        btnShowSubParams.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tag-blue-edit-icon.png"))); // NOI18N
        btnShowSubParams.setEnabled(false);
        btnShowSubParams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowSubParamsActionPerformed(evt);
            }
        });
        pnlInputs.add(btnShowSubParams);
        btnShowSubParams.setBounds(700, 50, 30, 25);

        pnlOutput.setBorder(javax.swing.BorderFactory.createTitledBorder(" Outputs"));
        pnlOutput.setLayout(null);

        tblOutput.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "WSDL Parameter", "WSDL Type", "OWL-S Name", "OWL Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOutput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblOutputMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tblOutput);
        tblOutput.getColumnModel().getColumn(3).setMinWidth(280);
        tblOutput.getColumnModel().getColumn(3).setPreferredWidth(280);
        tblOutput.getColumnModel().getColumn(3).setMaxWidth(280);

        pnlOutput.add(jScrollPane4);
        jScrollPane4.setBounds(10, 20, 680, 80);

        btnAnotateOutput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/domain-template-icon.png"))); // NOI18N
        btnAnotateOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnotateOutputActionPerformed(evt);
            }
        });
        pnlOutput.add(btnAnotateOutput);
        btnAnotateOutput.setBounds(700, 20, 30, 25);

        btnShowSubParamsOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tag-blue-edit-icon.png"))); // NOI18N
        btnShowSubParamsOut.setEnabled(false);
        btnShowSubParamsOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowSubParamsOutActionPerformed(evt);
            }
        });
        pnlOutput.add(btnShowSubParamsOut);
        btnShowSubParamsOut.setBounds(700, 50, 30, 25);

        pnlOutput1.setBorder(javax.swing.BorderFactory.createTitledBorder(" NameSpaces"));
        pnlOutput1.setLayout(null);

        tblNS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ABBR", "URI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblNS);

        pnlOutput1.add(jScrollPane6);
        jScrollPane6.setBounds(10, 20, 680, 80);

        btnDelNS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Actions-remove-icon.png"))); // NOI18N
        btnDelNS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelNSActionPerformed(evt);
            }
        });
        pnlOutput1.add(btnDelNS);
        btnDelNS.setBounds(700, 50, 30, 30);

        btnAddNS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-icon.png"))); // NOI18N
        btnAddNS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNSActionPerformed(evt);
            }
        });
        pnlOutput1.add(btnAddNS);
        btnAddNS.setBounds(700, 20, 30, 30);

        javax.swing.GroupLayout pnlBodyLayout = new javax.swing.GroupLayout(pnlBody);
        pnlBody.setLayout(pnlBodyLayout);
        pnlBodyLayout.setHorizontalGroup(
            pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBodyLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pnlOperations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlInputs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlServiceInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlOutput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
                    .addComponent(pnlOutput1, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlBodyLayout.setVerticalGroup(
            pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBodyLayout.createSequentialGroup()
                .addGroup(pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlBodyLayout.createSequentialGroup()
                        .addComponent(pnlServiceInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlInputs, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlOutput1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlOperations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnlBody);
        pnlBody.setBounds(0, 45, 1000, 588);

        getAccessibleContext().setAccessibleName("frmAddServices");

        setSize(new java.awt.Dimension(1001, 709));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFolderActionPerformed
        FilesServicesFilter filter = new FilesServicesFilter("Web Servicer Description Language (*.wsdl)", "wsdl");
        fileChoser.addChoosableFileFilter(filter);

        if (fileChoser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            try {
                edtWSDL.setText(fileChoser.getSelectedFile().toURI().toURL().toExternalForm());
            } catch (final MalformedURLException ex) {
                Logger.getLogger(FAddServices.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnFolderActionPerformed

    private void btnProcessServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessServiceActionPerformed

        if (edtWSDL.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "The Field URL/File is mandatory.", ".: e-ScienceNet :.", JOptionPane.ERROR_MESSAGE,
                (new javax.swing.ImageIcon(getClass().getResource("/images/error.png"))));
            return;
        }

        String url = edtWSDL.getText();
        url = fileToURI(url).replaceAll(" ","%20");

        try {
            WSDLService service = WSDLService.createService(URIUtils.createURI(url));            
            List servicos = service.getOperations();
            
            lstOperations.setListData(servicos.toArray());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Can't load service description from file\n " + url + "\n" + e, ".: e-ScienceNet :.", JOptionPane.ERROR_MESSAGE,
                (new javax.swing.ImageIcon(getClass().getResource("/images/error.png"))));
        }
    }//GEN-LAST:event_btnProcessServiceActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed

        lblAviso.setVisible(false);
        if(SemanticManager.getInstance().checkServiceExists(edtServiceName.getText())){
            lblAviso.setVisible(true);
            JOptionPane.showMessageDialog(null, "The service which you are processing, already exists in this peer.", ".: e-ScienceNet :.", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        WSDLOperation operation = (WSDLOperation) lstOperations.getSelectedValue();
        String service = edtServiceName.getText();
        
        for(int i = 0; i < tblInput.getRowCount(); i++){
            if(tblInput.getModel().getValueAt(i, 3).toString().equals("")){
                JOptionPane.showMessageDialog(null, "The OWL Type of " + tblInput.getModel().getValueAt(i, 2).toString() + " to be white. So, don't is possible to create OWL-S File."
                                              , ".: e-ScienceNet :.", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        
        for(int i = 0; i < tblOutput.getRowCount(); i++){
            if(tblOutput.getModel().getValueAt(i, 3).toString().equals("")){
                JOptionPane.showMessageDialog(null, "The OWL Type of " + tblOutput.getModel().getValueAt(i, 2).toString() + " to be white. So, don't is possible to create OWL-S File."
                                              , ".: e-ScienceNet :.", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        
        if((lblDomainTerm.getText().equals("No domain term associate...")) || (lblDomainTerm.getText().equals(""))){
            JOptionPane.showMessageDialog(null, "The Domain Annotation to be white. So, don't is possible to create OWL-S File."
                                              , ".: e-ScienceNet :.", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        WSDLRecover wsdlRecover = SemanticManager.getInstance().getCompositionManager().getProcessWSDLInformation().getWSDLInfo(edtWSDL.getText(), service, null, null);
        
        String address = "";
        if(wsdlRecover != null){
            for(WSDLRecoverService serv : wsdlRecover.getServices()){
                for(WSDLRecoverPort port : serv.getPorts()){
                    address = port.getAdress();
                }
            }
        }
        
        this.serviceInfoModel = new ServicesInfoModel();
        serviceInfoModel.setWsdlAddress(address);
        
        if (! serviceManager.gerarOWLS(service, operation, edtServiceDescription.getText(), edtLogicalURI.getText(), 
                                       lstInputs, lstOutputs, qNames, lblDomainTerm.getText(), this.serviceInfoModel, this.connector)){
            return;
        }        
        
        this.setVisible(false);
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void lstOperationsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstOperationsValueChanged
        WSDLOperation operation = (WSDLOperation) lstOperations.getSelectedValue();

        if(operation == null) {
            edtServiceName.setText("");
            edtServiceDescription.setText("");

            addParams(new ArrayList(), tblInput);
            addParams(new ArrayList(), tblOutput);

            btnOK.setEnabled(false);
        }
        else {
            edtLogicalURI.setText(LOGICAL_URI + operation.getName() + ".owl");
            edtServiceName.setText(operation.getName());

            if(operation.getDocumentation() == null){
                edtServiceDescription.setText("Auto generated from " + operation.getService().getFileURI());
            }else{
                edtServiceDescription.setText(operation.getDocumentation());
            }
            edtServiceDescription.setCaretPosition(0);

            addParams(operation.getInputs(), tblInput);
            addParams(operation.getOutputs(), tblOutput);
            
            lstInputs.clear();
            lstOutputs.clear();
            
            povoarLstParametros(tblInput, true);
            povoarLstParametros(tblOutput, false);                    

            btnOK.setEnabled(true);
        }
    }//GEN-LAST:event_lstOperationsValueChanged

    private void edtServiceNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtServiceNameActionPerformed

    }//GEN-LAST:event_edtServiceNameActionPerformed

    private void btnDelNSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelNSActionPerformed
        if (tblNS.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(this, "It's necessary to select one of NameSpaces for deletion!", ".: e-ScienceNet :.", JOptionPane.ERROR_MESSAGE,
                (new javax.swing.ImageIcon(getClass().getResource("/images/error.png"))));
            return;
        }

        String abbr = (String) tblNS.getModel().getValueAt(tblNS.getSelectedRow(), 0);

        if (JOptionPane.showConfirmDialog(this, "Do you really would like to delete the NameSpace ["+ abbr.toUpperCase() +"]?", ".: e-ScienceNet :.", JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE, (new javax.swing.ImageIcon(getClass().getResource("/images/question.png")))) == 0){
        qNames.removePrefix(abbr);
        updateNS();
        }
    }//GEN-LAST:event_btnDelNSActionPerformed

    private void btnAddNSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNSActionPerformed
        FaddNameSpace frmAddNameSpace = new FaddNameSpace(null, true);
        frmAddNameSpace.setVisible(true);

        if (frmAddNameSpace.getNameSpaceModel() != null){
            qNames.setMapping(frmAddNameSpace.getNameSpaceModel().getAbbr(), frmAddNameSpace.getNameSpaceModel().getURI());
            updateNS();
        }
    }//GEN-LAST:event_btnAddNSActionPerformed

    private void edtServiceNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtServiceNameKeyPressed
        
    }//GEN-LAST:event_edtServiceNameKeyPressed

    private void edtServiceNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtServiceNameKeyReleased
        edtLogicalURI.setText(LOGICAL_URI + edtServiceName.getText() + ".owl");
    }//GEN-LAST:event_edtServiceNameKeyReleased

    private void btnAnotateInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnotateInputActionPerformed
        
        if(tblInput.getSelectedRow() > -1){
         
            String wsdlType = tblInput.getModel().getValueAt(tblInput.getSelectedRow(), 1).toString();
            
            if(wsdlType.indexOf(":") != 0){
                wsdlType = wsdlType.substring(wsdlType.indexOf(":") + 1);
            }
            
            if(tblInput.getModel().getValueAt(tblInput.getSelectedRow(), 3).toString().contains("Thing")){
                if(JOptionPane.showConfirmDialog(null, "["+ tblInput.getModel().getValueAt(tblInput.getSelectedRow(), 0).toString() +"] is a complex param.\n\n"+ 
                            "Would you like really to annotate it?", ".: e-ScienceNet :.", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION){
                    return;
                }
            }
            
            String owlsName = tblInput.getModel().getValueAt(tblInput.getSelectedRow(), 2).toString();
            
            String[] suggestion = {edtServiceName.getText(), wsdlType, owlsName};
            
            FAssServicesAndDomain frmAssServicesAndDomain = new FAssServicesAndDomain(null, true, suggestion);
            frmAssServicesAndDomain.setVisible(true); 
            
            if(frmAssServicesAndDomain.getClassesModel() != null){
                
                String uri = frmAssServicesAndDomain.getClassesModel().getUri().substring(0, frmAssServicesAndDomain.getClassesModel().getUri().lastIndexOf("#") + 1);
                
                if(frmAssServicesAndDomain.getClassesModel().getFile() != null){
                    qNames.setMapping(frmAssServicesAndDomain.getClassesModel().getFile().toLowerCase().replaceAll(".owl", ""), uri);
                }
                
                tblInput.getModel().setValueAt(qNames.shortForm(frmAssServicesAndDomain.getClassesModel().getUri()), tblInput.getSelectedRow(), 3);
                
                lstInputs.get(tblInput.getSelectedRow()).setNameSpaceURI(frmAssServicesAndDomain.getClassesModel().getUri());
                lstInputs.get(tblInput.getSelectedRow()).setLocalPart(qNames.shortForm(frmAssServicesAndDomain.getClassesModel().getUri()));
                
                this.updateNS();
            }
        }        
    }//GEN-LAST:event_btnAnotateInputActionPerformed

    private void btnAnotateOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnotateOutputActionPerformed
        if(tblOutput.getSelectedRow() > -1){
         
            String wsdlType = tblOutput.getModel().getValueAt(tblOutput.getSelectedRow(), 1).toString();
            
            if(wsdlType.indexOf(":") != 0){
                wsdlType = wsdlType.substring(wsdlType.indexOf(":") + 1);
            }
            
            if(tblOutput.getModel().getValueAt(tblOutput.getSelectedRow(), 3).toString().contains("Thing")){
                if(JOptionPane.showConfirmDialog(null, "["+ tblOutput.getModel().getValueAt(tblOutput.getSelectedRow(), 0).toString() +"] is a complex param.\n\n"+ 
                            "Would you like really to annotate it?", ".: e-ScienceNet :.", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION){
                    return;
                }
            }
            
            String owlsName = tblOutput.getModel().getValueAt(tblOutput.getSelectedRow(), 2).toString();
            
            String[] suggestion = {edtServiceName.getText(), wsdlType, owlsName};
            
            FAssServicesAndDomain frmAssServicesAndDomain = new FAssServicesAndDomain(null, true, suggestion);
            frmAssServicesAndDomain.setVisible(true); 
            
            if(frmAssServicesAndDomain.getClassesModel() != null){
                
                String uri = frmAssServicesAndDomain.getClassesModel().getUri().substring(0, frmAssServicesAndDomain.getClassesModel().getUri().lastIndexOf("#") + 1);
                
                if(frmAssServicesAndDomain.getClassesModel().getFile() != null){
                    qNames.setMapping(frmAssServicesAndDomain.getClassesModel().getFile().toLowerCase().replaceAll(".owl", ""), uri);
                }
                
                tblOutput.getModel().setValueAt(qNames.shortForm(frmAssServicesAndDomain.getClassesModel().getUri()), tblOutput.getSelectedRow(), 3);
                
                lstOutputs.get(tblOutput.getSelectedRow()).setNameSpaceURI(frmAssServicesAndDomain.getClassesModel().getUri());
                lstOutputs.get(tblOutput.getSelectedRow()).setLocalPart(qNames.shortForm(frmAssServicesAndDomain.getClassesModel().getUri()));
                
                this.updateNS();                
            }
        }  
    }//GEN-LAST:event_btnAnotateOutputActionPerformed

    private void btnRelationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelationsActionPerformed

        if(this.connector){
            
            WSDLRecover wsdlRecover = SemanticManager.getInstance().getCompositionManager().
                                      getProcessWSDLInformation().getWSDLInfo(edtWSDL.getText(), edtServiceName.getText(), null, null);
        
            String address = "";
            if(wsdlRecover != null){
                for(WSDLRecoverService serv : wsdlRecover.getServices()){
                    for(WSDLRecoverPort port : serv.getPorts()){
                        address = port.getAdress();
                        break;
                    }
                }
            }
            
            if(!address.equals("")){
                FServiceRelateds frmServiceRelateds = new FServiceRelateds(null, true, address);
                frmServiceRelateds.setVisible(true);
                
                if(!frmServiceRelateds.getServiceSelected().equals("")){
                    lblDomainTerm.setText(frmServiceRelateds.getServiceSelected());
                }
            }
        }else{
            String[] suggestion = {edtServiceName.getText()};

            FAssServicesAndDomain frmAssServicesAndDomain = new FAssServicesAndDomain(null, true, suggestion);
            frmAssServicesAndDomain.setVisible(true); 

            if(frmAssServicesAndDomain.getClassesModel() != null){

                String uri = frmAssServicesAndDomain.getClassesModel().getUri().substring(0, frmAssServicesAndDomain.getClassesModel().getUri().lastIndexOf("#") + 1);

                if(frmAssServicesAndDomain.getClassesModel().getFile() != null){
                    qNames.setMapping(frmAssServicesAndDomain.getClassesModel().getFile().toLowerCase().replaceAll(".owl", ""), uri);
                }

                lblDomainTerm.setText(frmAssServicesAndDomain.getClassesModel().getUri());

                this.updateNS();                
            }  
        }
    }//GEN-LAST:event_btnRelationsActionPerformed

    private void lblDomainTermComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_lblDomainTermComponentShown
        
    }//GEN-LAST:event_lblDomainTermComponentShown

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        if(connector){
            lblDomainTerm.setVisible(false);
            btnRelations.setVisible(false);
            ckbSuggestions.setVisible(true);
            lblDomainTerm.setText("No service associate...");
        }else{
            lblDomainTerm.setText("No domain term associate...");
            ckbSuggestions.setVisible(false);
        }
    }//GEN-LAST:event_formComponentShown

    private void ckbSuggestionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbSuggestionsActionPerformed
        if(ckbSuggestions.isSelected()){
            lblDomainTerm.setVisible(true);
            btnRelations.setVisible(true);
        }else{
            lblDomainTerm.setVisible(false);
            btnRelations.setVisible(false);
        }
    }//GEN-LAST:event_ckbSuggestionsActionPerformed

    private void btnShowSubParamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowSubParamsActionPerformed
        if(tblInput.getSelectedRow() > -1){
         
            String wsdlParameter = tblInput.getModel().getValueAt(tblInput.getSelectedRow(), 0).toString();
            WSDLOperation operation = (WSDLOperation) lstOperations.getSelectedValue();
            
            FSimpleParametesAnnotation frmSimpleParam = new FSimpleParametesAnnotation(null, true, edtWSDL.getText(), operation.getName(), 
                                                                                       wsdlParameter, qNames, true);
            frmSimpleParam.setWsdlRecoverParamParent(lstInputs.get(tblInput.getSelectedRow()));
            frmSimpleParam.setVisible(true);
            
            this.updateNS();
        }
    }//GEN-LAST:event_btnShowSubParamsActionPerformed

    private void tblInputMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInputMouseReleased
        if(tblInput.getSelectedRow() != -1){
            
            if(tblInput.getModel().getValueAt(tblInput.getSelectedRow(), 1).toString().contains("xsd")){
                btnShowSubParams.setEnabled(false);
            }else{
                btnShowSubParams.setEnabled(true);
            }            
        }
    }//GEN-LAST:event_tblInputMouseReleased

    private void btnShowSubParamsOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowSubParamsOutActionPerformed
        if(tblOutput.getSelectedRow() > -1){
         
            String wsdlParameter = tblOutput.getModel().getValueAt(tblOutput.getSelectedRow(), 0).toString();
            WSDLOperation operation = (WSDLOperation) lstOperations.getSelectedValue();
            
            FSimpleParametesAnnotation frmSimpleParam = new FSimpleParametesAnnotation(null, true, edtWSDL.getText(), operation.getName(), 
                                                                                       wsdlParameter, qNames, false);
            frmSimpleParam.setWsdlRecoverParamParent(lstOutputs.get(tblOutput.getSelectedRow()));
            frmSimpleParam.setVisible(true);
            
            this.updateNS();
        }        
    }//GEN-LAST:event_btnShowSubParamsOutActionPerformed

    private void tblOutputMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOutputMouseReleased
        if(tblOutput.getSelectedRow() != -1){
            
            if(tblOutput.getModel().getValueAt(tblOutput.getSelectedRow(), 1).toString().contains("xsd")){
                btnShowSubParamsOut.setEnabled(false);
            }else{
                btnShowSubParamsOut.setEnabled(true);
            }            
        }
    }//GEN-LAST:event_tblOutputMouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNS;
    private javax.swing.JButton btnAnotateInput;
    private javax.swing.JButton btnAnotateOutput;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDelNS;
    private javax.swing.JButton btnFolder;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnProcessService;
    private javax.swing.JButton btnRelations;
    private javax.swing.JButton btnShowSubParams;
    private javax.swing.JButton btnShowSubParamsOut;
    private javax.swing.JCheckBox ckbSuggestions;
    private javax.swing.JTextField edtLogicalURI;
    private javax.swing.JTextArea edtServiceDescription;
    private javax.swing.JTextField edtServiceName;
    private javax.swing.JTextField edtWSDL;
    private javax.swing.JFileChooser fileChoser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblAviso;
    private javax.swing.JLabel lblDomainTerm;
    private javax.swing.JLabel lblURL;
    private javax.swing.JList lstOperations;
    private javax.swing.JPanel pnlBody;
    private javax.swing.JPanel pnlFooter;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JPanel pnlInputs;
    private javax.swing.JPanel pnlOperations;
    private javax.swing.JPanel pnlOutput;
    private javax.swing.JPanel pnlOutput1;
    private javax.swing.JPanel pnlServiceInfo;
    private javax.swing.JTable tblInput;
    private javax.swing.JTable tblNS;
    private javax.swing.JTable tblOutput;
    // End of variables declaration//GEN-END:variables

    private void updateNS() {
        limparTabela(tblNS);
        
        DefaultTableModel model = (DefaultTableModel) tblNS.getModel();
        
        for (String prefix : qNames.getPrefixSet()) {
            String uri = qNames.getURI(prefix);

            model.addRow(new Object[]{prefix, uri});
        }

        tblNS.setModel(model);
    }
    
    private void povoarLstParametros(JTable tblParametro, boolean isInput){
        
        if(isInput){            
            for(int i = 0; i < tblParametro.getRowCount(); i++){
                WSDLRecoverParams wsdlRecoverParams = new WSDLRecoverParams();
                wsdlRecoverParams.setName(tblParametro.getModel().getValueAt(i, 2).toString());
                wsdlRecoverParams.setParameterTypeXSD(qNames.longForm(tblParametro.getModel().getValueAt(i, 1).toString()));
                        
                if(!tblParametro.getModel().getValueAt(i, 3).toString().equals("")){
                    wsdlRecoverParams.setLocalPart(tblParametro.getModel().getValueAt(i, 3).toString());
                    wsdlRecoverParams.setNameSpaceURI(qNames.longForm(wsdlRecoverParams.getLocalPart()));
                }
                
                lstInputs.add(wsdlRecoverParams);
            }     
        }else{
            for(int i = 0; i < tblParametro.getRowCount(); i++){
                WSDLRecoverParams wsdlRecoverParams = new WSDLRecoverParams();
                wsdlRecoverParams.setName(tblParametro.getModel().getValueAt(i, 2).toString());
                wsdlRecoverParams.setParameterTypeXSD(qNames.longForm(tblParametro.getModel().getValueAt(i, 1).toString()));
                
                if(!tblParametro.getModel().getValueAt(i, 3).toString().equals("")){
                    wsdlRecoverParams.setLocalPart(tblParametro.getModel().getValueAt(i, 3).toString());
                    wsdlRecoverParams.setNameSpaceURI(qNames.longForm(wsdlRecoverParams.getLocalPart()));
                }
                
                lstOutputs.add(wsdlRecoverParams);
            }
        }        
    }
    
    private void addParams(List params, JTable table) {
        limparTabela(table);
        
        DefaultTableModel model = (DefaultTableModel) table.getModel();

        for(Iterator i = params.iterator(); i.hasNext(); ) {
            WSDLParameter parameter = (WSDLParameter) i.next();
            QName paramType = (parameter.getType() == null) ? new QName(WSDLConsts.xsdURI, "any") : parameter.getType();
            String wsdlType = paramType.getNamespaceURI() + "#" + paramType.getLocalPart();

            if(wsdlType.indexOf("[") != -1){
                wsdlType = wsdlType.substring(0, wsdlType.indexOf("["));
            }
            
            String type = OWL.Thing.toString();

            if (paramType.getNamespaceURI().equals(WSDLConsts.soapEnc) || (paramType.getNamespaceURI().equals(WSDLConsts.xsdURI) &&  (! paramType.getLocalPart().equals("any")))){
            
                if(paramType.getNamespaceURI().indexOf("[") == -1){
                    type = XSD.ns + paramType.getLocalPart();
                }
            }

            if(type.contains(OWL.Thing.toString())){
                Object[] linha = {URIUtils.getLocalName(parameter.getName()),
                        qNames.shortForm(wsdlType),
                        URIUtils.getLocalName(parameter.getName()), 
                        qNames.shortForm(type)};
                
                model.addRow(linha);
            }else{
                                
                Object[] linha = {URIUtils.getLocalName(parameter.getName()),
                        qNames.shortForm(wsdlType),
                        URIUtils.getLocalName(parameter.getName()), 
                        ""};
                
                model.addRow(linha);
            }
        }

        table.setModel(model);
    }
    
    public void limparTabela(JTable table){
        
        DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
                
        while (defaultTableModel.getRowCount() != 0){         
            defaultTableModel.removeRow(0);            
        }        
    }
    
    private String fileToURI(String fileName){
        try{
            if ((! fileName.toLowerCase().contains("file:/")) && (! fileName.toLowerCase().contains("http:"))){
                File file = new File(fileName);           

                return file.toURI().toURL().toExternalForm();
            }else{
                return fileName;
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e, ".: e-ScienceNet :.", JOptionPane.ERROR_MESSAGE);
            return "";
        }
    }

    /**
     * @param serviceManager the serviceManager to set
     */
    public void setServiceManager(ServiceManager serviceManager) {
        this.serviceManager = serviceManager;
    }

    /**
     * @return the serviceInfoModel
     */
    public ServicesInfoModel getServiceInfoModel() {
        return serviceInfoModel;
    }

    /**
     * @param connector the connector to set
     */
    public void setConnector(boolean connector) {
        this.connector = connector;
    }    
}
