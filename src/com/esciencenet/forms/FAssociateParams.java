/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.esciencenet.forms;

import com.esciencenet.servicemanager.OWLSOperation;
import com.esciencenet.servicemanager.OWLSParam;
import java.util.List;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tadeu
 */
public class FAssociateParams extends javax.swing.JDialog {

    private OWLSOperation connector;
    private OWLSOperation service;
    private String ass;
    private String selectedAssociation;
    private boolean isInput;
    
    /**
     * Creates new form FAssociateParams
     */
    public FAssociateParams(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public FAssociateParams(java.awt.Frame parent, boolean modal, OWLSOperation connector, OWLSOperation service, String ass, boolean isInput) {
        super(parent, modal);
        initComponents();
        this.service = service;
        this.connector = connector;
        this.ass = ass;
        this.selectedAssociation = "";
        this.isInput = isInput;
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form
     * Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFooter = new javax.swing.JPanel();
        btnFechar = new javax.swing.JButton();
        lblTask = new javax.swing.JLabel();
        Selection = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMatch = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Params Asssociation");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        pnlFooter.setBackground(new java.awt.Color(192, 192, 192));

        btnFechar.setBackground(new java.awt.Color(192, 192, 192));
        btnFechar.setText("Close");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        lblTask.setForeground(new java.awt.Color(255, 255, 255));
        lblTask.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblTaskPropertyChange(evt);
            }
        });

        Selection.setBackground(new java.awt.Color(192, 192, 192));
        Selection.setText("Make Association");
        Selection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFooterLayout = new javax.swing.GroupLayout(pnlFooter);
        pnlFooter.setLayout(pnlFooterLayout);
        pnlFooterLayout.setHorizontalGroup(
            pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFooterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTask, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(Selection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlFooterLayout.setVerticalGroup(
            pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFooterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTask)
                    .addComponent(Selection)
                    .addComponent(btnFechar))
                .addContainerGap())
        );

        jLabel4.setText("Possibles Associations");

        tblMatch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Connector Param", "Service Param"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMatch.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblMatch);
        tblMatch.getColumnModel().getColumn(0).setResizable(false);
        tblMatch.getColumnModel().getColumn(1).setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(556, 317));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnFecharActionPerformed

    private void lblTaskPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblTaskPropertyChange

    }//GEN-LAST:event_lblTaskPropertyChange

    private void SelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectionActionPerformed
        if(tblMatch.getSelectedRow() != -1){
        
            String match = !isInput ?                    
                           "[" + tblMatch.getModel().getValueAt(tblMatch.getSelectedRow(), 1).toString() + " == " + 
                           tblMatch.getModel().getValueAt(tblMatch.getSelectedRow(), 0).toString() + "]"
                           : "[" + tblMatch.getModel().getValueAt(tblMatch.getSelectedRow(), 0).toString() + " == " + 
                           tblMatch.getModel().getValueAt(tblMatch.getSelectedRow(), 1).toString()+ "]";
            
            if(this.ass.contains(match)){
                
                OWLSParam owlsParamServico = this.retornarParametroServico(tblMatch.getModel().getValueAt(tblMatch.getSelectedRow(), 1).toString());
                OWLSParam owlsParamConnector = this.retornarParametroConnector(tblMatch.getModel().getValueAt(tblMatch.getSelectedRow(), 0).toString());
                
                if((owlsParamServico != null) && (owlsParamConnector != null)){
                    this.connector.setCompatibility(match);
                    owlsParamServico.getConnectorAssociated().add(this.connector);
                    owlsParamServico.getParamConnectorAssociated().add(owlsParamConnector);
                    owlsParamConnector.getParamConnected().add(owlsParamServico);
                    this.selectedAssociation = match;
                    this.setVisible(false);
                }
            }
        }
    }//GEN-LAST:event_SelectionActionPerformed
   
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        this.preencherPossiveis();
    }//GEN-LAST:event_formComponentShown

    private void preencherPossiveis(){
        
        DefaultTableModel model = (DefaultTableModel) tblMatch.getModel();
        
        StringTokenizer matches = new StringTokenizer(ass, "|");
        
        while(matches.hasMoreTokens()){
            
            StringTokenizer match = new StringTokenizer(matches.nextToken(), "==");
            
            if(match.hasMoreTokens()){
                String paramCon = match.nextToken();
                String paramSer = match.nextToken();
                Object[] linha = {!isInput ? paramSer.substring(0, paramSer.length() - 1).trim() : paramCon.substring(1, paramCon.length()).trim(),
                                  !isInput ? paramCon.substring(1, paramCon.length()).trim() : paramSer.substring(0, paramSer.length() - 1).trim()};

                model.addRow(linha);
            }
        }
        
        tblMatch.setModel(model);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Selection;
    private javax.swing.JButton btnFechar;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTask;
    private javax.swing.JPanel pnlFooter;
    private javax.swing.JTable tblMatch;
    // End of variables declaration//GEN-END:variables

    private OWLSParam retornarParametroServico(String param){
        try{
            if(isInput){
                for(OWLSParam owlsParam : service.getInputs()){
                    if(param.equals(owlsParam.getParamName())){
                        return owlsParam;
                    }
                    
                    for(OWLSOperation connect : owlsParam.getConnectorAssociated()){
                        for(OWLSParam connParam : connect.getInputs()){
                            if(param.equals(connParam.getParamName())){
                                return connParam;
                            } 
                        }
                    } 
                }
            }else{
                for(OWLSParam owlsParam : service.getOutputs()){
                    if(param.equals(owlsParam.getParamName())){
                        return owlsParam;
                    }
                    
                    for(OWLSOperation connect : owlsParam.getConnectorAssociated()){
                        for(OWLSParam connParam : connect.getOutputs()){
                            if(param.equals(connParam.getParamName())){
                                return connParam;
                            } 
                        }
                    }                    
                }
            }
            
            return null;
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "It wasn't possible to return the parameter.", ".: e-ScienceNet :.", JOptionPane.ERROR_MESSAGE);
            return null;
        }        
    }
    
    private OWLSParam retornarParametroConnector(String param){
        try{
            if(isInput){
                for(OWLSParam owlsParam : connector.getOutputs()){
                    if(param.equals(owlsParam.getParamName())){
                        return owlsParam;
                    }
                }
            }else{
                for(OWLSParam owlsParam : connector.getInputs()){
                    if(param.equals(owlsParam.getParamName())){
                        return owlsParam;
                    }
                }
            }
            
            return null;
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "It wasn't possible to return the parameter.", ".: e-ScienceNet :.", JOptionPane.ERROR_MESSAGE);
            return null;
        }        
    }

    /**
     * @return the selectedAssociation
     */
    public String getSelectedAssociation() {
        return selectedAssociation;
    }
}
