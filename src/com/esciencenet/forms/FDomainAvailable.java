/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.esciencenet.forms;

import com.esciencenet.interestmanager.InterestManager;
import com.esciencenet.models.FindDomainFileModel;
import com.esciencenet.semanticmanager.SemanticManager;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Tadeu
 */
public class FDomainAvailable extends javax.swing.JDialog {

    /**
     * @param xmlDomains the xmlDomains to set
     */
    public void setXmlDomains(String xmlDomains) {
        this.xmlDomains = xmlDomains;
    }

    public class JTableRenderer extends DefaultTableCellRenderer  {    
    
        @Override
        protected void setValue(Object value){    

            if (value instanceof ImageIcon){    

                if (value != null){    
                    ImageIcon d = (ImageIcon) value;    
                    setIcon(d);    
                } else{    
                    setText("");    
                    setIcon(null);  
                    this.setFont(this.getFont().deriveFont(16));
                }    

            } else {    
                super.setValue(value);    
            }    
            this.setHorizontalAlignment(CENTER);            
        }
    }
    
    private String xmlDomains;
    
    /**
     * Creates new form FDomainAvailable
     */
    public FDomainAvailable(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void limparTabela(){
        
        DefaultTableModel defaultTableModel = (DefaultTableModel) tblDomains.getModel();
                
        while (defaultTableModel.getRowCount() != 0){         
            defaultTableModel.removeRow(0);            
        }        
    }
    
    public void update(){
        this.limparTabela();        
        this.processDomains();        
    }
    
    private void processDomains(){        
        String xml = xmlDomains;        
        xml = xml.substring(xml.indexOf(InterestManager.RESPONSE_DOMAINS) + InterestManager.RESPONSE_DOMAINS.length() + 1, xml.length());
        
        XStream xstream = new XStream(new DomDriver());
        List<FindDomainFileModel> lstFileDomains = (List<FindDomainFileModel>) xstream.fromXML(xml);
        
        TableColumnModel ColumnModel = tblDomains.getColumnModel();    
        JTableRenderer renderer = new FDomainAvailable.JTableRenderer();    
        ColumnModel.getColumn(0).setCellRenderer(renderer);               
        ColumnModel.getColumn(4).setCellRenderer(renderer);   
        
        DefaultTableModel model = (DefaultTableModel) tblDomains.getModel();
        
        for(FindDomainFileModel findDomainFileModel : lstFileDomains){
            
            FindDomainFileModel fileDomain = SemanticManager.getInstance().getInterestManager().checkExistenceDomainFile(findDomainFileModel);
            
            Icon donwload = null;
            Icon hand = null;
            String nomeLocalFile = "";
            if(fileDomain == null){
                donwload = new ImageIcon(getClass().getResource("/images/downloadDomain.png"));
                hand = new ImageIcon(getClass().getResource("/images/advertising-icon.png"));
            }else{      
                nomeLocalFile = fileDomain.getNome();
                
                if(findDomainFileModel.getSize() != fileDomain.getSize()){
                    donwload = new ImageIcon(getClass().getResource("/images/downloadDomain.png"));
                    hand = new ImageIcon(getClass().getResource("/images/advertising-icon.png"));
                }else{
                    donwload = new ImageIcon(getClass().getResource("/images/downloadDomain.png"));
                    hand = new ImageIcon(getClass().getResource("/images/accept-icon.png"));
                }
            }            
            
            Object[] linha = {donwload, findDomainFileModel.getNome(), findDomainFileModel.getSize(), nomeLocalFile, hand};
            
            model.addRow(linha);
        }       
            
        tblDomains.setModel(model);        
        tblDomains.setRowHeight(30);
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form
     * Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ppmDownload = new javax.swing.JPopupMenu();
        actDownload = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDomains = new javax.swing.JTable();
        pnlFooter2 = new javax.swing.JPanel();
        btnOK2 = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        actDownload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/downloadDomain.png"))); // NOI18N
        actDownload.setText("Download Domain");
        actDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actDownloadActionPerformed(evt);
            }
        });
        ppmDownload.add(actDownload);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Domains Available At Super Node");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tblDomains.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Domain Onntology", "Size (KB)", "My Ontology", "Diference?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDomains.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblDomains.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblDomains.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblDomainsMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblDomains);
        tblDomains.getColumnModel().getColumn(0).setResizable(false);
        tblDomains.getColumnModel().getColumn(0).setPreferredWidth(40);
        tblDomains.getColumnModel().getColumn(1).setResizable(false);
        tblDomains.getColumnModel().getColumn(1).setPreferredWidth(230);
        tblDomains.getColumnModel().getColumn(2).setResizable(false);
        tblDomains.getColumnModel().getColumn(2).setPreferredWidth(100);
        tblDomains.getColumnModel().getColumn(3).setResizable(false);
        tblDomains.getColumnModel().getColumn(3).setPreferredWidth(230);
        tblDomains.getColumnModel().getColumn(4).setResizable(false);
        tblDomains.getColumnModel().getColumn(4).setPreferredWidth(40);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pnlFooter2.setBackground(new java.awt.Color(192, 192, 192));

        btnOK2.setBackground(new java.awt.Color(192, 192, 192));
        btnOK2.setText("Close");
        btnOK2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOK2ActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(192, 192, 192));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/downloadDomain.png"))); // NOI18N
        btnCancelar.setText("Download Domain");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFooter2Layout = new javax.swing.GroupLayout(pnlFooter2);
        pnlFooter2.setLayout(pnlFooter2Layout);
        pnlFooter2Layout.setHorizontalGroup(
            pnlFooter2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFooter2Layout.createSequentialGroup()
                .addContainerGap(384, Short.MAX_VALUE)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOK2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlFooter2Layout.setVerticalGroup(
            pnlFooter2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFooter2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFooter2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOK2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(pnlFooter2, java.awt.BorderLayout.PAGE_END);

        setSize(new java.awt.Dimension(655, 390));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        if(tblDomains.getSelectedRow() != -1){
           
            String owl = tblDomains.getModel().getValueAt(tblDomains.getSelectedRow(), 1).toString();            
            SemanticManager.getInstance().getInterestManager().downloadDomain(owl);            
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnOK2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOK2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnOK2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
    }//GEN-LAST:event_formWindowOpened

    private void tblDomainsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDomainsMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON3){
            //exibo o popupMenu para iniciar a cópia dos arquivos
            ppmDownload.show(tblDomains, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tblDomainsMouseReleased

    private void actDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actDownloadActionPerformed
        this.btnCancelarActionPerformed(evt);
    }//GEN-LAST:event_actDownloadActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        this.limparTabela();
        this.processDomains();
    }//GEN-LAST:event_formComponentShown

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem actDownload;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnOK2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlFooter2;
    private javax.swing.JPopupMenu ppmDownload;
    private javax.swing.JTable tblDomains;
    // End of variables declaration//GEN-END:variables
}
